# -*- coding: utf-8 -*-
"""Ex4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aYcvKLbaUT0CzHlUsE2UKg5U-UdxQybI

# **Exercise 4: Histogram**
"""

def make_histo(input_file, nbin=20, height=20):
    input_values = []
    with open(input_file, "r") as file:
        line = file.readline()
        input_values = line.split(", ")
    
    #delete \n at the end of the last number
    last_elem = len(input_values)-1
    pure_value=""
    for char in input_values[last_elem]:
        if char!="\n":
            pure_value+=char
    
    input_values[last_elem]=pure_value

    #cast to float
    for index, item in enumerate(input_values):
        input_values[index] = float(item)
                
    #distribution of value in nbin
    output_last_line = []
    for item in range(nbin+1):
        output_last_line.append((((max(input_values)-min(input_values))/nbin)*item)+min(input_values))
    
    elem_occ = []    
    output_star = []

    for index,item in enumerate(output_last_line):
        sum_of_occ=[]
        if index!=(len(output_last_line)-1):
            for item_value in input_values:
                if item_value <=output_last_line[index+1] and item_value>=item:
                    sum_of_occ.append(1)
        else:
            for item_value in input_values:
                if item_value>item:
                    sum_of_occ.append(1)        
        elem_occ.append(sum(sum_of_occ))

    for item in elem_occ:
        output_star.append(int((item*height)/max(elem_occ)))

    my_output=""
    for item in reversed(range(1,max(output_star)+1)):
        my_output+=" "
        for star in output_star:
            if star>=item:
                my_output+="*  "
            else:
                my_output+="   "
        my_output+="\n"
    
    for index,item in enumerate(output_last_line):
        output_last_line[index] = int(item)
    
    for item in sorted(output_last_line):
        my_output+=str(item)
        if item<10:
            my_output+="  "
        else:
            my_output+=" "
    print(my_output)

make_histo("distrib1_small.txt")
print("\n\n")
make_histo("distrib2_small.txt")